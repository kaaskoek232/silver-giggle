[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "comfyui-memory-management"
version = "1.1.0"
description = "Advanced memory management custom nodes for ComfyUI"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AI Coding Assistant", email = "noreply@example.com"}
]
keywords = ["comfyui", "memory", "optimization", "gpu", "vram", "custom-nodes"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "psutil>=5.9.0,<6.0.0",
    "torch>=1.9.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/ComfyUI/ComfyUI-MemoryManagement"
Documentation = "https://github.com/ComfyUI/ComfyUI-MemoryManagement/blob/main/README.md"
Repository = "https://github.com/ComfyUI/ComfyUI-MemoryManagement.git"
Issues = "https://github.com/ComfyUI/ComfyUI-MemoryManagement/issues"

[tool.setuptools.packages.find]
include = ["*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.toml"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=. --cov-report=html --cov-report=term-missing --cov-fail-under=80" 